"use strict";(self.webpackChunkhandbook=self.webpackChunkhandbook||[]).push([[70],{9030:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var t=i(5893),a=i(1151);const s={title:"Glossary"},o=void 0,r={id:"specification/glossary",title:"Glossary",description:"Private Key*: The private key in a key pair, used for signing data.",source:"@site/docs/specification/glossary.md",sourceDirName:"specification",slug:"/specification/glossary",permalink:"/specification/glossary",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Glossary"},sidebar:"specification",previous:{title:"Canonical Encoding",permalink:"/specification/encoding-data"}},c={},d=[];function l(e){const n={a:"a",li:"li",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Private Key"}),": The private key in a key pair, used for signing data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Public Key"}),": The public key in a key pair, used to identify an author and verify signed data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/specification/data-types/bamboo#author",children:"Author (in Bamboo)"})}),": The public key included in a Bamboo entry."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/specification/data-types/bamboo",children:"Bamboo"})}),": An append-only log data type that ensures security and authenticity of arbitrary data in order to share it in a decentralised and trustless setting."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/specification/encoding-data#cbor",children:"CBOR"})}),": Concise Binary Object Representation data format used for encoding ",(0,t.jsx)(n.a,{href:"/specification/data-types/operations",children:"operations"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/specification/data-types/documents",children:"Document"})}),": Conflict free multi-writer data type which represents most application and system data in p2panda."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/specification/data-types/bamboo",children:"Entry"})}),": An entry in an append only log."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/specification/data-types/bamboo#hashing",children:"Hash"})}),": The result of applying a hashing function to some data, this hash is used to uniquely identify and verify the hashed data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/specification/data-types/bamboo#hashing",children:"Hashing"})}),": A cryptography method that converts any form of data to a unique text string."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/specification/data-types/bamboo#encoding",children:"Hexadecimal Encoding"})}),": Human-friendly representation of binary-coded values using the hexadecimal numeral system. The p2panda GraphQL ",(0,t.jsx)(n.a,{href:"/specification/APIs/overview",children:"APIs"})," require values to be hex-encoded."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/specification/data-types/key-pairs",children:"Key Pair"})}),": A string of data that is used to lock or unlock cryptographic functions, including authentication, authorization and encryption."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/specification/data-types/operations",children:"Operation"})}),": p2panda data type which describes data mutations. Collections of linked operations form causal mutation graphs which are the foundation for p2panda ",(0,t.jsx)(n.a,{href:"/specification/data-types/documents",children:"Documents"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"https://github.com/bamboo-rs/yasmf-hash",children:"Yasmf"})}),": A multiformat hash used in p2panda."]}),"\n"]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>r,a:()=>o});var t=i(7294);const a={},s=t.createContext(a);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);